{"version":3,"sources":["webpack:///./task-1.js","webpack:///./task-3.js","webpack:///./index.js","webpack:///./task-2.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then","makeTransaction","transaction","onSuccess","onError","min","max","Math","floor","random","id","logSuccess","logError","warn","amount","catch","users","name","active","toggleUserState","allUsers","userName","map","user","updatedUsers","table"],"mappings":"8EAEA,MAAMA,EAAQC,GACH,IAAIC,QAAQC,IACfC,WAAW,KACTD,EAAQF,OAKZI,EAASC,GAAQC,QAAQC,IAAK,kBAAiBF,OAGrDN,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,MAAMS,KAAKJ,I,qBCZjB,MAIMK,EAAmBC,GAEb,IAAIT,QAAQ,CAACU,EAAWC,KAC5B,MAAMb,GAPqBc,EAOa,IAPRC,EAOa,IAN5CC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,IADpB,IAACA,EAAKC,EAQpCX,WAAW,KACQY,KAAKE,SAAW,GAG/BN,EAAU,CAAEO,GAAIR,EAAYQ,GAAIb,KAAMN,IAExCa,EAAQF,EAAYQ,KAErBnB,KAICoB,EAAa,EAAGD,KAAIb,WACxBC,QAAQC,IAAK,eAAcW,kBAAmBb,QAG1Ce,EAAWF,IACfZ,QAAQe,KAAM,gCAA+BH,+BAa/CT,EAAgB,CAAES,GAAI,GAAII,OAAQ,MAC/Bd,KAAKW,GACLI,MAAMH,GAETX,EAAgB,CAAES,GAAI,GAAII,OAAQ,MAC/Bd,KAAKW,GACLI,MAAMH,GAETX,EAAgB,CAAES,GAAI,GAAII,OAAQ,KAC/Bd,KAAKW,GACLI,MAAMH,GAETX,EAAgB,CAAES,GAAI,GAAII,OAAQ,MAC/Bd,KAAKW,GACLI,MAAMH,I,yDCvDT,gD,mBCEA,MAAMI,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAGnBC,EAAkB,CAACC,EAAUC,IACxB,IAAI5B,QAAQC,IACfA,EAAQ0B,EAASE,IAAIC,GACjBA,EAAKN,OAASI,EAAW,IAAKE,EAAML,QAASK,EAAKL,QAAWK,MAMnE3B,EAAS4B,GAAgB1B,QAAQ2B,MAAMD,GAW7CL,EAAgBH,EAAO,SAAShB,KAAKJ,GACrCuB,EAAgBH,EAAO,OAAOhB,KAAKJ,K","file":"main.78247d2df627de5bd440.js","sourcesContent":["// ------  –∑–∞–¥–∞–Ω–∏–µ 1 ---------\n\nconst delay = ms => {\n    return new Promise(resolve => {\n        setTimeout(() => {\n          resolve(ms), ms\n      })\n  })\n};\n\nconst logger = time => console.log(`Resolved after ${time}ms`);\n\n// –í—ã–∑–æ–≤—ã —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms\n\n","\n// ------------- –∑–∞–¥–∞–Ω–∏–µ 3 --------------\n\nconst randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = (transaction) => {\n\n     return new Promise((onSuccess, onError) => {\n        const delay = randomIntegerFromInterval(200, 500);\n    setTimeout(() => {\n    const canProcess = Math.random() > 0.3;\n\n    if (canProcess) {\n        onSuccess({ id: transaction.id, time: delay});\n    } else {\n      onError(transaction.id);\n    }\n  }, delay);\n     })\n};\n\nconst logSuccess = ({ id, time }) => {\n  console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = id => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\n/*\n * –†–∞–±–æ—Ç–∞–µ—Ç —Ç–∞–∫\n */\n// makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\n// makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\n// makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\n// makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\n/*\n * –î–æ–ª–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–∞–∫\n */\nmakeTransaction({ id: 70, amount: 150 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 })\n  .then(logSuccess)\n  .catch(logError);","import './styles.css';\nimport './task-1';\nimport './task-2';\nimport './task-3'\n\n// const promise = new Promise((resolve, reject) => {\n//     const canFullField = Math.random() > 0.5;\n\n//     setTimeout(() => {\n//         if (canFullField) {\n//         resolve('all is right, –≤—ã–ø–æ–ª–Ω–µ–Ω fullfield');\n//     }\n\n//     reject('–ø—Ä–æ–º–∏—Å –≤—ã–ø–æ–ª–Ω–µ–Ω —Å –æ—à–∏–±–∫–æ–π, –æ—Ç–∫–ª–æ–Ω–µ–Ω - rejected');\n//    }, 1000)\n// });\n\n// promise.then(result => {\n//     console.log(`üß© ${result}`);\n// }, error => {\n//         console.log(`üéØ ${error}`);\n// });\n\n// promise.then(result => {\n//     console.log(result);\n//     return 5;\n// }).then(x => {\n// console.log(x);\n// })\n\n\n\n\n\n\n","// -------- –∑–∞–¥–∞–Ω–∏–µ 2 ------------\n\nconst users = [\n  { name: 'Mango', active: true },\n  { name: 'Poly', active: false },\n  { name: 'Ajax', active: true },\n  { name: 'Lux', active: false },\n];\n\nconst toggleUserState = (allUsers, userName, ) => {\n    return new Promise(resolve => {\n        resolve(allUsers.map(user =>\n            user.name === userName ? { ...user, active: !user.active } : user,\n        )\n        );\n    });\n};\n\nconst logger = updatedUsers => console.table(updatedUsers);\n\n/*\n * –°–µ–π—á–∞—Å —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–∞–∫\n */\n// toggleUserState(users, 'Mango', logger);\n// toggleUserState(users, 'Lux', logger);\n\n/*\n * –î–æ–ª–∂–Ω–æ —Ä–∞–±–æ—Ç–∞—Ç—å —Ç–∞–∫\n */\ntoggleUserState(users, 'Mango').then(logger);\ntoggleUserState(users, 'Lux').then(logger);\n\n"],"sourceRoot":""}